{"version":3,"sources":["src/App.style.ts","src/App.tsx","src/calculate.ts","App.tsx"],"names":["style","StyleSheet","create","container","backgroundColor","padding","borderTopColor","Platform","OS","undefined","borderTopWidth","content","marginHorizontal","maxWidth","title","fontWeight","fontSize","color","row","flexDirection","justifyContent","marginTop","input","borderColor","borderWidth","borderRadius","width","height","paddingHorizontal","paddingVertical","textAlign","App","useState","a","setA","b","setB","c","setC","value","calculate","toast","useToast","View","TextInput","selectionColor","underlineColorAndroid","onChangeText","parseInt","isNaN","toString","selectTextOnFocus","keyboardType","placeholder","editable","onFocus","Keyboard","dismiss","Clipboard","setString","show","Shell","children","Text","Entrypoint","placement","SafeAreaView","StatusBar","barStyle"],"mappings":"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","file":"static/js/app.cde8f079.chunk.js","sourcesContent":["import { StyleSheet, Platform } from \"react-native\";\n\nexport const brandPrimary = \"#7746e8\";\n\nexport const style = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff\",\n    padding: \"5%\",\n    borderTopColor: Platform.OS === \"web\" ? brandPrimary : undefined,\n    borderTopWidth: Platform.OS === \"web\" ? 8 : undefined,\n  },\n  content: {\n    marginHorizontal: \"auto\",\n    maxWidth: 600,\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontSize: 32,\n    color: \"#222\",\n  },\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginTop: 16,\n  },\n  input: {\n    borderColor: \"#dedede\",\n    color: \"#333\",\n    borderWidth: Platform.OS === \"android\" ? 0 : 1,\n    borderRadius: 4,\n    width: \"48%\",\n    fontSize: 24,\n    height: 40,\n    paddingHorizontal: 3,\n    paddingVertical: 8,\n    textAlign: \"center\",\n  },\n});\n","import React from \"react\";\nimport type { FunctionComponent } from \"react\";\nimport { Text, TextInput, View, Keyboard, Clipboard } from \"react-native\";\nimport { useToast } from \"react-native-fast-toast\";\n\nimport { calculate } from \"./calculate\";\nimport { useState } from \"react\";\nimport { brandPrimary, style } from \"./App.style\";\n\n// TODO handle decimals\nexport const App: FunctionComponent = () => {\n  const [a, setA] = useState<number>();\n  const [b, setB] = useState<number>();\n  const [c, setC] = useState<number>();\n  const value = calculate({ a, b, c });\n\n  const toast = useToast();\n\n  return (\n    <Shell>\n      <View style={style.row}>\n        <TextInput\n          selectionColor={brandPrimary}\n          underlineColorAndroid={brandPrimary}\n          style={style.input}\n          onChangeText={(value) => setA(parseInt(value))}\n          value={!a || isNaN(a) ? \"\" : a?.toString()}\n          selectTextOnFocus={true}\n          keyboardType=\"numeric\"\n          placeholder=\"Value 1\"\n        />\n        <TextInput\n          selectionColor={brandPrimary}\n          underlineColorAndroid={brandPrimary}\n          style={style.input}\n          onChangeText={(value) => setB(parseInt(value))}\n          value={!b || isNaN(b) ? \"\" : b?.toString()}\n          selectTextOnFocus={true}\n          keyboardType=\"numeric\"\n          placeholder=\"Value 2 (e.g. 100%)\"\n        />\n      </View>\n      <View style={style.row}>\n        <TextInput\n          selectionColor={brandPrimary}\n          underlineColorAndroid={brandPrimary}\n          style={style.input}\n          onChangeText={(value) => setC(parseInt(value))}\n          value={!c || isNaN(c) ? \"\" : c?.toString()}\n          selectTextOnFocus={true}\n          keyboardType=\"numeric\"\n          placeholder=\"Value 3\"\n        />\n        <TextInput\n          selectionColor={brandPrimary}\n          underlineColorAndroid={brandPrimary}\n          style={[style.input, { fontWeight: \"bold\" }]}\n          value={!value || isNaN(value) ? \"\" : value.toString()}\n          placeholder=\"Result\"\n          editable={!!value}\n          selectTextOnFocus={true}\n          onFocus={() => {\n            if (!value) {\n              return;\n            }\n\n            Keyboard.dismiss();\n            // TODO migrate to @react-community/clipboard (doesnt work on web yet)\n            Clipboard.setString(value.toString());\n            toast?.show(\"Result copied to clipboard!\");\n          }}\n        />\n      </View>\n    </Shell>\n  );\n};\n\nconst Shell: FunctionComponent = ({ children }) => (\n  <View style={style.container}>\n    <View style={style.content}>\n      <Text style={style.title}>Rule of Three</Text>\n      <View>{children}</View>\n    </View>\n  </View>\n);\n","export const calculate = ({ a = 0, b = 0, c = 0 }) => (b * c) / a || 0;\n","import React, { StrictMode } from \"react\";\nimport type { FunctionComponent } from \"react\";\nimport { SafeAreaView, StatusBar } from \"react-native\";\nimport { ToastProvider } from \"react-native-fast-toast\";\n\nimport { App } from \"./src/App\";\nimport { brandPrimary } from \"./src/App.style\";\n\nconst Entrypoint: FunctionComponent = () => (\n  <StrictMode>\n    <ToastProvider placement=\"bottom\">\n      {/* Applies color to iOS */}\n      <SafeAreaView style={{ backgroundColor: brandPrimary }}>\n        {/* Applies color to Android */}\n        <StatusBar barStyle=\"light-content\" backgroundColor={brandPrimary} />\n        <App />\n      </SafeAreaView>\n    </ToastProvider>\n  </StrictMode>\n);\n\nexport default Entrypoint;\n"],"sourceRoot":""}